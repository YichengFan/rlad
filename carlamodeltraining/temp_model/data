{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmRxbi5wb2xpY2llc5SMCURRTlBvbGljeZSTlC4=",
        "__module__": "stable_baselines3.dqn.policies",
        "__annotations__": "{'q_net': <class 'stable_baselines3.dqn.policies.QNetwork'>, 'q_net_target': <class 'stable_baselines3.dqn.policies.QNetwork'>}",
        "__doc__": "\n    Policy class with Q-Value Net and target net for DQN\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function DQNPolicy.__init__ at 0x000001CA693849D0>",
        "_build": "<function DQNPolicy._build at 0x000001CA69384A60>",
        "make_q_net": "<function DQNPolicy.make_q_net at 0x000001CA69384AF0>",
        "forward": "<function DQNPolicy.forward at 0x000001CA69384B80>",
        "_predict": "<function DQNPolicy._predict at 0x000001CA69384C10>",
        "_get_constructor_parameters": "<function DQNPolicy._get_constructor_parameters at 0x000001CA69384CA0>",
        "set_training_mode": "<function DQNPolicy.set_training_mode at 0x000001CA69384D30>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x000001CA69379E10>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 400000,
    "_total_timesteps": 400000,
    "_num_timesteps_at_start": 350000,
    "seed": null,
    "action_noise": null,
    "start_time": 1734461250137510200,
    "learning_rate": 0.0001,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVgQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYMAAAAAAAAAJDi0D+I2t8+5BCoQJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsDhpSMAUOUdJRSlC4="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVgQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYMAAAAAAAAAODV0D/GbN8+DVuoQJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsDhpSMAUOUdJRSlC4="
    },
    "_episode_num": 244,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 99750,
    "buffer_size": 50000,
    "batch_size": 64,
    "learning_starts": 1000,
    "tau": 0.01,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x000001CA690AB430>",
        "add": "<function ReplayBuffer.add at 0x000001CA690AB4C0>",
        "sample": "<function ReplayBuffer.sample at 0x000001CA690AB550>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x000001CA690AB5E0>",
        "_maybe_cast_dtype": "<staticmethod object at 0x000001CA69041B50>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x000001CA69041AE0>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLBGgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "exploration_initial_eps": 1.0,
    "exploration_final_eps": 0.05,
    "exploration_fraction": 0.1,
    "target_update_interval": 1000,
    "_n_calls": 400000,
    "max_grad_norm": 10,
    "exploration_rate": 0.05,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVuQEAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLA4WUjANsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWDAAAAAAAAAAAAMjCAAA0wwAAAACUaAtLA4WUjAFDlHSUUpSMDWJvdW5kZWRfYmVsb3eUaBMolgMAAAAAAAAAAQEBlGgIjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwOFlGgWdJRSlIwEaGlnaJRoEyiWDAAAAAAAAAAAAMhCAAA0QwAAyEKUaAtLA4WUaBZ0lFKUjA1ib3VuZGVkX2Fib3ZllGgTKJYDAAAAAAAAAAEBAZRoHUsDhZRoFnSUUpSMCGxvd19yZXBylIwTWy0xMDAuIC0xODAuICAgIDAuXZSMCWhpZ2hfcmVwcpSMEFsxMDAuIDE4MC4gMTAwLl2UjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "float32",
        "_shape": [
            3
        ],
        "low": "[-100. -180.    0.]",
        "bounded_below": "[ True  True  True]",
        "high": "[100. 180. 100.]",
        "bounded_above": "[ True  True  True]",
        "low_repr": "[-100. -180.    0.]",
        "high_repr": "[100. 180. 100.]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVxwEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIAwAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCmMBWR0eXBllGgLjAJpOJSJiIeUUpQoSwNoD05OTkr/////Sv////9LAHSUYowKX25wX3JhbmRvbZSMFG51bXB5LnJhbmRvbS5fcGlja2xllIwQX19nZW5lcmF0b3JfY3RvcpSTlIwFUENHNjSUaB+MFF9fYml0X2dlbmVyYXRvcl9jdG9ylJOUhpRSlH2UKIwNYml0X2dlbmVyYXRvcpSMBVBDRzY0lIwFc3RhdGWUfZQoaCqKEUDvZcfFGYu4mful/6s1LKwAjANpbmOUihFVyjOsLHq8fSmiFGauAX+ZAHWMCmhhc191aW50MzKUSwGMCHVpbnRlZ2VylIoFAhjHjQB1YnViLg==",
        "n": "3",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVVwMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLA0sTQwx0AIgAfACDAYMBUwCUToWUjAVmbG9hdJSFlIwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjFtDOlxVc2Vyc1xyb2JlclxhbmFjb25kYTNcZW52c1xjYXJsYV9lbnZcbGliXHNpdGUtcGFja2FnZXNcc3RhYmxlX2Jhc2VsaW5lczNcY29tbW9uXHV0aWxzLnB5lIwIPGxhbWJkYT6US2FDAJSMDnZhbHVlX3NjaGVkdWxllIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5RoDnVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGggfZR9lChoGIwIPGxhbWJkYT6UjAxfX3F1YWxuYW1lX1+UjCFnZXRfc2NoZWR1bGVfZm4uPGxvY2Fscz4uPGxhbWJkYT6UjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgZjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOUaAIoaAcoSwFLAEsASwFLAUsTQwSIAFMAlGgJKYwBX5SFlGgOjARmdW5jlEuFQwIAAZSMA3ZhbJSFlCl0lFKUaBVOTmgcKVKUhZR0lFKUaCJoPX2UfZQoaBiMBGZ1bmOUaCaMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUaCh9lGgqTmgrTmgsaBloLU5oLmgwRz8aNuLrHEMthZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjCFlFKUhZRoRl2UaEh9lHWGlIZSMC4="
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": [],
    "exploration_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVGQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBEsTQyxkAXwAGACIAWsEchCIAFMAiAJkAXwAGACIAIgCGAAUAIgBGwAXAFMAZABTAJROSwGGlCmMEnByb2dyZXNzX3JlbWFpbmluZ5SFlIxbQzpcVXNlcnNccm9iZXJcYW5hY29uZGEzXGVudnNcY2FybGFfZW52XGxpYlxzaXRlLXBhY2thZ2VzXHN0YWJsZV9iYXNlbGluZXMzXGNvbW1vblx1dGlscy5weZSMBGZ1bmOUS3NDBgABDAEEApSMA2VuZJSMDGVuZF9mcmFjdGlvbpSMBXN0YXJ0lIeUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5RoDHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUaBwpUpRoHClSlIeUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIn2UfZQoaBiMBGZ1bmOUjAxfX3F1YWxuYW1lX1+UjBtnZXRfbGluZWFyX2ZuLjxsb2NhbHM+LmZ1bmOUjA9fX2Fubm90YXRpb25zX1+UfZQoaAqMCGJ1aWx0aW5zlIwFZmxvYXSUk5SMBnJldHVybpRoLnWMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgZjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOURz+pmZmZmZmahZRSlGg2Rz+5mZmZmZmahZRSlGg2Rz/wAAAAAAAAhZRSlIeUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu"
    }
}